# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  lane :updateBuildVersion do
    increment_build_number(
      build_number: buildNumber,
    )
  end

  lane :printChangelog do
    puts defaultChangeLog
  end

  desc "Private properties"

  def buildNumber
    buildNumber = `git rev-list HEAD --count`.delete!("\n")
    return buildNumber
  end

  def defaultChangeLog
    return changelog_from_git_commits(
             pretty: "* [%an] - %s  \n",
             commits_count: 20,
           )
  end

  desc "Push a new beta build to TestFlight"
  lane :beta do
    updateBuildVersion
    clearArtifacts

    build_app(
      workspace: "RADAdvertiserDemo.xcworkspace",
      scheme: "Main",
      clean: true,
      output_directory: "fastlane/Artifacts",
      export_options: {
        method: "app-store",
        provisioningProfiles: {
          "com.rakutenadvertising.RADAdvertiserDemo" => "RADAdvertiserDemo Production PP",
        },
      },
    )

    upload_to_testflight(
      beta_app_description: defaultChangeLog,
    )
  end

  lane :betaSecond do
    updateBuildVersion
    clearArtifacts

    build_app(
      workspace: "RADAdvertiserDemo.xcworkspace",
      scheme: "Second",
      clean: true,
      output_directory: "fastlane/Artifacts",
      export_options: {
        method: "app-store",
        provisioningProfiles: {
          "com.rakutenadvertising.RADAdvertiserDemoSecond" => "RAd Advertiser Demo Second Production PP",
        },
      },
    )

    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      changelog: defaultChangeLog,
      beta_app_description: defaultChangeLog,
    )
  end

  desc "Private lanes"
  private_lane :clearArtifacts do
    pathToArtifacts = "./Artifacts"
    FileUtils.rm_rf(pathToArtifacts)
    FileUtils.mkdir_p(pathToArtifacts)
  end
end
